import { useState, useEffect } from "react";
import { useQuery, gql, useMutation } from "@apollo/client";
import {
  useSignInEmailPassword,
  useSignOut,
  useAuthenticationStatus,
} from "@nhost/react";
import { useAuthQuery } from "@nhost/react-apollo";

import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";

import Todos from "../components/Todos";

const GET_TODOS = gql`
  query {
    todos {
      title
      id
      completed
    }
  }
`;

const ADD_TODOS = gql`
  mutation AddTodo($todo: todos_insert_input!) {
    insert_todos(objects: [$todo]) {
      affected_rows
    }
  }
`;

export default function Home() {
  const { data, loading, error } = useAuthQuery(GET_TODOS);
  const [todoTitle, setTodoTitle] = useState("");
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [insertTodo] = useMutation(ADD_TODOS);
  const authenticationStatus = useAuthenticationStatus();
  const signOut = useSignOut();
  const [email, setEmail] = useState("onebloodyidiot@gmail.com");
  const [password, setPassword] = useState("12345678");
  const {
    signInEmailPassword,
    isLoading,
    isSuccess,
    needsEmailVerification,
    isError,
    error: signInError,
  } = useSignInEmailPassword();

  const handleSignout = async () => {
    await signOut.signOut();
    console.log(`user is signed out`);
  };

  const handleSignIn = async () => {
    await signInEmailPassword(email, password);
    console.log("user has been signed in");
  };

  const handleSubmit = (e) => {
    e.preventDefault();

    try {
      insertTodo({
        variables: {
          todo: {
            title: todoTitle,
          },
        },
      });
      setTodoTitle("");
      console.log("Todo inserted");
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    if (authenticationStatus.isAuthenticated) {
      setIsAuthenticated(true);
    } else {
      setIsAuthenticated(false);
    }
  });

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Create NHOST <a href="https://nextjs.org">Todos!</a>
        </h1>
        <p className={styles.description}>
          Go to <Link href="/dashboard">Dashboard</Link>
        </p>

        <form className={styles.form} onSubmit={handleSubmit}>
          <input
            type="text"
            value={todoTitle}
            onChange={(e) => setTodoTitle(e.target.value)}
            placeholder="Enter a todo item"
            className={styles.input}
          />
        </form>

        {isAuthenticated ? (
          <button className={styles.button} onClick={handleSignout}>
            Sign Out
          </button>
        ) : (
          <button className={styles.button} onClick={handleSignIn}>
            Sign In
          </button>
        )}

        <div>
          <Todos loading={loading} error={error} data={data} />
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
